# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          env:
            cache-name: "cache-maven-${{ hashFiles('./pom.xml') }}"
          run: |
            # Restore cached Maven dependencies
            if [ -d ${{ env.HOME }}/.m2/repository ]; then
              echo "Restoring cached Maven dependencies..."
              cp -R ${{ env.HOME }}/.m2/repository .
            fi
            # Build and test project, and store new Maven dependencies in cache
            mvn clean verify -Dtest=*IT
            # Save Maven dependencies in cache
            if [ -d ~/.m2/repository ]; then
              echo "Saving Maven dependencies in cache..."
              mkdir -p ${{ env.HOME }}/.cache-maven
              cp -R ~/.m2/repository ${{ env.HOME }}/.cache-maven
            fi

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.HOME }}/.cache-maven
          key: ${{ env.cache-name }}
          restore-keys: |
            cache-maven-
            cache-

      - name: Upload code coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/index.html
